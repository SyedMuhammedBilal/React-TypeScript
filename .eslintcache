[{"/Users/syed_.bilal/Desktop/todo/src/reportWebVitals.ts":"1","/Users/syed_.bilal/Desktop/todo/src/App.tsx":"2"},{"size":425,"mtime":1606577592967,"results":"3","hashOfConfig":"4"},{"size":849,"mtime":1606633284221,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2hn8fi",{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/Users/syed_.bilal/Desktop/todo/src/reportWebVitals.ts",[],"/Users/syed_.bilal/Desktop/todo/src/App.tsx",["11","12"],"import React, { useState } from 'react';\nimport './App.css';\n\ntype FormElem = React.FormEvent<HTMLFormElement> // type for form \n\ninterface ITodo {\n  text: string;\n  completed: boolean;\n};\n\nconst App:React.FC = () => {\n\n  const [value, setValue] = useState<string>(''); // always add generic in useState\n  const [todo, setTodo] = useState<ITodo[]>([]); \n  // an interface contain types and at the end of the generic <ITodo> we add '[]' because it is an empty array\n\n  const handleSubmit = (e: FormElem):void => {\n    e.preventDefault();\n    setValue('')\n  }\n\n  return (\n    <React.Fragment>\n      <h1>Todo App</h1>\n      <form onSubmit={handleSubmit} >\n        <input value={value} type='text' onChange={e => setValue(e.target.value)} />\n        <button type='submit'>Add Todo</button>\n      </form>\n    </React.Fragment>\n  )\n}\n\nexport default App;\n",{"ruleId":"13","severity":1,"message":"14","line":14,"column":10,"nodeType":"15","messageId":"16","endLine":14,"endColumn":14},{"ruleId":"13","severity":1,"message":"17","line":14,"column":16,"nodeType":"15","messageId":"16","endLine":14,"endColumn":23},"@typescript-eslint/no-unused-vars","'todo' is assigned a value but never used.","Identifier","unusedVar","'setTodo' is assigned a value but never used."]